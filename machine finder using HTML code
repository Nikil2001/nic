<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form with Excel Data Display</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: url('C:/Users/intern1/Desktop/machines/004.jfif') no-repeat center center fixed;
            background-size: cover;
            display: flex;
            flex-direction: column; /* Column layout to separate form and data */
            align-items: center;
            min-height: 100vh;
            margin: 0;
            color: #333;
            animation: blinkBackground 5s ease-in-out; /* Apply the blink animation */
        }

        /* Container Styles */
        .container {
            display: flex;
            flex-direction: column; /* Column layout for main content */
            width: 60%; /* Wider width for better layout */
            max-width: 800px; /* Increased max-width for better spacing */
            margin: 100px 0; /* Added margin for spacing */
        }

        .form-container, .data-container {
            background-color: rgba(255, 255, 255, 0.9); /* Semi-transparent background */
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
            margin-bottom: 20px; /* Added margin to separate the two sections */
        }

        /* Form container styles */
        .form-container {
            padding: 20px; /* Added padding for form */
        }

        /* Data container styles */
        .data-container {
            padding: 10px; /* Less padding for data container */
            display: none; /* Hide the data container by default */
            margin-bottom: 50px; /* Ensure there is space at the bottom */
        }

        /* Form Styles */
        h2 {
            font-size: 1.5em;
            margin-bottom: 20px;
            color: #1b1b1b;
        }

        .form-group {
            margin-bottom: 10px;
        }

        label {
            display: block;
            margin-bottom: 10px; /* Reduced margin for labels */
            color: #323131;
        }

        /* Input and File Input Styles */
        input[type="text"], input[type="file"] {
            width: 100%; /* Full width for input elements */
            padding: 10px;
            box-sizing: border-box;
            border: 2px solid #ddd; /* Lighter border */
            border-radius: 5px; /* Rounded corners */
            background: transparent; /* Make background transparent */
            color: #000000; /* Text color */
        }

        /* Adjusting placeholder color */
        input::placeholder {
            color: #aaa;
        }

        /* Radio Group Styles */
        .radio-group {
            display: flex;
            flex-wrap: wrap;
            gap: 10px; /* Add gap between radio buttons */
        }

        /* Submit Button Styles */
        .submit-button {
            margin-top: 20px;
            padding: 10px 15px;
            font-size: 1em;
            color: #fff;
            background-color: #007bff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .submit-button:hover {
            background-color: #0056b3;
        }

        /* Table Styles */
        .data-container table {
            width: 100%; /* Full width for table */
            border-collapse: collapse;
        }

        .data-container th, .data-container td {
            border: 1px solid #ddd;
            padding: 8px; /* Reduced padding for a casual look */
            text-align: left;
        }

        .data-container th {
            background-color: #007bff;
            color: #fff;
        }

        .data-container tr:nth-child(even) {
            background-color: #f9f9f9; /* Light grey for even rows */
        }

        .data-container tr:hover {
            background-color: #f1f1f1; /* Slightly darker grey on hover */
        }

        .data-container a {
            color: #007bff;
            text-decoration: none;
        }

        .data-container a:hover {
            text-decoration: underline;
        }

        /* Modal Styles */
        .photo-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        .photo-modal-content {
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
            max-width: 90%;
            max-height: 90%;
        }

        .photo-modal-content img {
            max-width: 100%;
            height: auto;
        }

        .photo-modal-content p {
            margin-top: 10px;
            color: #333;
        }

        .photo-modal-content button {
            margin-top: 10px;
            padding: 10px 15px;
            font-size: 1em;
            color: #fff;
            background-color: #007bff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .photo-modal-content button:hover {
            background-color: #0056b3;
        }

        /* Keyframes for background blink animation */
        @keyframes blinkBackground {
            0% { background-color: rgba(255, 255, 255, 0.2); }
            50% { background-color: rgba(255, 255, 255, 0.5); }
            100% { background-color: rgba(255, 255, 255, 0.2); }
        }

        /* Logo Styles */
        header {
            position: absolute;
            top: 10px; /* Adjust as needed */
            left: 10px; /* Adjust as needed */
            z-index: 1000; /* Ensure the logo is above other content */
        }

        .logo {
            max-width: 150px; /* Adjust the size of the logo */
            height: auto;
        }
    </style>
</head>
<body>
    <header>
        <img src="C:/Users/intern1/Desktop/HTML/edited.jpg" alt="Logo" class="logo"> <!-- Link to your photo file -->
    </header>
    <div class="container">
        <div class="form-container">
            <h2>Input Form</h2>
            <form id="inputForm">
                <div class="form-group">
                    <label for="diameter">Diameter (mm):</label>
                    <input type="text" id="diameter" name="diameter" placeholder="Enter diameter length">
                </div>
                <div class="form-group">
                    <label for="length">Length (mm):</label>
                    <input type="text" id="length" name="length" placeholder="Enter length">
                </div>
                <div class="form-group">
                    <label for="grindLength">Grind Length (mm):</label>
                    <input type="text" id="grindLength" name="grindLength" placeholder="Enter grind length">
                </div>
                <div class="form-group">
                    <label>Spindle Power (kW):</label>
                    <div class="radio-group">
                        <label><input type="radio" name="spindlePower" value="3.7"> 3.7</label>
                        <label><input type="radio" name="spindlePower" value="5.5"> 5.5</label>
                        <label><input type="radio" name="spindlePower" value="7.5"> 7.5</label>
                        <label><input type="radio" name="spindlePower" value="11"> 11</label>
                        <label><input type="radio" name="spindlePower" value="13"> 13</label>
                        <label><input type="radio" name="spindlePower" value="15"> 15</label>
                        <label><input type="radio" name="spindlePower" value="17"> 17</label>
                    </div>
                </div>
                <div class="form-group">
                    <label for="fileInput">Choose Excel File:</label>
                    <input type="file" id="fileInput" accept=".xlsx, .xls">
                </div>
                <button type="button" class="submit-button" onclick="handleSubmit()">Submit</button>
            </form>
        </div>

        <div class="data-container">
            <h2>Suitable Machines</h2>
            <div id="excelData"></div>
        </div>
    </div>

    <!-- Modal for displaying the photo and description -->
    <div id="photoModal" class="photo-modal">
        <div class="photo-modal-content">
            <img id="photoImage" src='' alt="Photo">
            <p id="photoDescription"></p>
            <button onclick="closeModal()">Close</button>
        </div>
    </div>

    <!-- Include the xlsx library from CDN -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <script>
        let machineData = []; // Global variable to hold machine data

        function handleSubmit() {
            const diameter = parseFloat(document.getElementById('diameter').value);
            const length = parseFloat(document.getElementById('length').value);
            const grindLength = parseFloat(document.getElementById('grindLength').value);
            const spindlePower = parseFloat(document.querySelector('input[name="spindlePower"]:checked')?.value);

            if (isNaN(diameter) || isNaN(length) || isNaN(grindLength) || isNaN(spindlePower)) {
                alert('Please enter valid numbers for all fields.');
                return;
            }

            // Load the file and parse it
            const fileInput = document.getElementById('fileInput');
            const file = fileInput.files[0];
            if (!file) {
                alert('Please select an Excel file.');
                return;
            }

            const reader = new FileReader();
            reader.onload = function(e) {
                const data = e.target.result;
                const workbook = XLSX.read(data, { type: 'binary' });
                const sheetName = workbook.SheetNames[0];
                const worksheet = workbook.Sheets[sheetName];
                machineData = XLSX.utils.sheet_to_json(worksheet);

                // Filter machines based on the form data
                const suitableMachines = machineData.filter(machine =>
                    machine['swing(mm)'] >= diameter &&
                    machine['Admit between centre(mm)'] >= length &&
                    machine['Grinding length(mm)'] >= grindLength &&
                    machine['Spindle power(kw)'] === spindlePower
                );

                // Generate HTML table for suitable machines
                const excelDataDiv = document.getElementById('excelData');
                excelDataDiv.innerHTML = '';

                if (suitableMachines.length === 0) {
                    excelDataDiv.innerHTML = '<p>No suitable machines found.</p>';
                    return;
                }

                // Check for available columns
                const columns = Object.keys(suitableMachines[0]);
                const machineTypeColumn = columns.find(col => col.toLowerCase().includes('machine type')) || 'Machine Type';
                const modelTypeColumn = columns.find(col => col.toLowerCase().includes('model type')) || 'Model Type';
                const photoPathColumn = columns.find(col => col.toLowerCase().includes('photo path')) || 'Photo Path';
                const idColumn = columns.find(col => col.toLowerCase().includes('id')) || 'ID';

                let tableHtml = `<table><thead><tr><th>${machineTypeColumn}</th><th>${modelTypeColumn}</th><th>Photo</th></tr></thead><tbody>`;

                suitableMachines.forEach(machine => {
                    tableHtml += `
                        <tr>
                            <td>${machine[machineTypeColumn]}</td>
                            <td>${machine[modelTypeColumn]}</td>
                            <td><a href="#" onclick="showPhoto('${machine[photoPathColumn]}', 'Description for ID ${machine[idColumn]}')">View Photo</a></td>
                        </tr>
                    `;
                });

                tableHtml += '</tbody></table>';
                excelDataDiv.innerHTML = tableHtml;

                // Show the data container
                document.querySelector('.data-container').style.display = 'block';
            };
            reader.readAsBinaryString(file);
        }

        function showPhoto(photoPath, description) {
            // Update the modal content
            document.getElementById('photoImage').src = photoPath;
            document.getElementById('photoDescription').textContent = description;

            // Show the modal
            document.getElementById('photoModal').style.display = 'flex';
        }

        function closeModal() {
            // Hide the modal
            document.getElementById('photoModal').style.display = 'none';
        }
    </script>
</body>
</html>
